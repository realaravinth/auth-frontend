{"version":3,"sources":["logo.svg","SignIn/SignIn.js","SignUp/SignUp.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","SignInForm","props","state","username","password","defaultHomeserver","homeserver","handleInputChange","bind","handleSubmit","event","target","value","name","this","setState","myHeaders","Headers","append","raw","JSON","stringify","fetch","method","headers","body","then","response","text","result","console","log","catch","error","preventDefault","className","onSubmit","required","autoFocus","autoComplete","type","placeholder","onChange","React","Component","SignUpForm","passwordFirst","passwordSecond","email","validatePassword","minLength","App","showSignIn","showSignup","toggleForm","alert","SignIn","onClick","SignUp","class","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.5ab95dbd.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\n\nclass SignInForm extends React.Component {\n constructor(props) {\n    super(props);\n    this.state = {\n      username: '',\n      password: '',\n      defaultHomeserver: 'https://accounts.shuttlecraft.com',\n\t  homeserver: '',\n    };\n\n    this.handleInputChange = this.handleInputChange.bind(this);\n\tthis.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleInputChange(event) {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n    this.setState({\n      [name]: value    });\n  }\n\n handleSubmit(event) {\n\t if ( this.state.homeserver === '' ){\n\t\t this.setState({\n\t\t\t [\"homeserver\"]: this.state.defaultHomeserver,\n\t\t });\n\t }\n\tlet myHeaders = new Headers();\nmyHeaders.append(\"Content-Type\", \"application/json\");\n\nlet raw = JSON.stringify({\n\t\"username\": this.state.username,\n\t\"password\": this.state.password\n});\n\nlet requestOptions = {\n  method: 'POST',\n  headers: myHeaders,\n  body: raw,\n};\n\nfetch(\"http://localhost:7000/index.html\", requestOptions)\n  .then(response => response.text())\n  .then(result => console.log(result))\n  .catch(error => console.log('error', error));\n    event.preventDefault();\n  }\n\n  render() {\n    return (\n\t\t<div>\n\t\t  <form className=\"formWrap\" onSubmit={this.handleSubmit}>\n\t\t\t<div className=\"formGroup\">\n\t\t\t\t<h1>Sign In</h1>\n\t\t\t</div>\n\t\t\t<div className=\"formGroup\">\n\t\t\t\t<label className=\"label\">\n\t\t\t\tUsername:\n\t\t\t\t</label>\n\t\t\t\t<input\n\t\t\t\t\trequired={true}\n\t\t\t\t\tautoFocus={true}\n\t\t\t\t\tautoComplete=\"username\"\n\t\t\t\t\tname=\"username\"            \n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tplaceholder=\"Username\"\n\t\t\t\t\tvalue={this.state.username}\n\t\t\t\t\tonChange={this.handleInputChange} />\n\t\t\t</div>\n\t\t\t<div className=\"formGroup\">\n\t\t\t\t<label className=\"label\">\n\t\t\t\tPassword:\n\t\t\t\t</label>\n\t\t\t\t<input\n\t\t\t\t\trequired={true}\n\t\t\t\t\tautoComplete=\"current-password\"\n\t\t\t\t\tname=\"password\"            \n\t\t\t\t\tplaceholder=\"Password\"\n\t\t\t\t\ttype=\"password\"\n\t\t\t\t\tvalue={this.state.password}\n\t\t\t\t\tonChange={this.handleInputChange} />\n\t\t\t</div>\n\t\t\t<div className=\"formGroup\">\n\t\t\t\t<label className=\"label\">\n\t\t\t\tHomeserver URL\n\t\t\t\t</label>\n\t\t\t\t<input\n\t\t\t\t\trequired={false}\n\t\t\t\t\tautoComplete=\"current-password\"\n\t\t\t\t\tname=\"homeserver\"            \n\t\t\t\t\tplaceholder={this.state.defaultHomeserver}\n\t\t\t\t\ttype=\"url\"\n\t\t\t\t\tvalue={this.state.homeserver}\n\t\t\t\t\tonChange={this.handleInputChange} />\n\t\t\t</div>\n\n\t\t\t<div className=\"formGroup\">\n\n\t\t\t\t <input className=\"btn\" type=\"submit\" value=\"Submit\" />\n\t\t\t</div>\n\t\t  </form>\n\t\t</div>\n    );\n  }\n\t}\n\n\nexport default SignInForm;\n","import React from 'react';\n\nclass SignUpForm extends React.Component {\n constructor(props) {\n    super(props);\n    this.state = {\n      username: '',\n\t  passwordFirst: '',\n\t  passwordSecond: '',\n\t  email: '',\n\t  homeserver: '',\n\t  defaultHomeserver: 'https://accounts.shuttlecraft.io',\n    };\n\n    this.handleInputChange = this.handleInputChange.bind(this);\n\tthis.handleSubmit = this.handleSubmit.bind(this);\n\tthis.validatePassword = this.validatePassword.bind(this);\n  }\n\n  handleInputChange(event) {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n\tif (name === \"passwordSecond\"){\n\t\tif (this.validatePassword(value)){\n\t\t\tthis.setState({\n\t\t\t\t[name]: value });\n\t\t}\n\t} else {\n    this.setState({\n      [name]: value    });\n\t}\n  }\n\n validatePassword(value){\n\treturn this.passwordFirst === value ? true : false ;\n }\n\n\n handleSubmit(event) {\n\t if ( this.state.homeserver === '' ){\n\t\t this.setState({\n\t\t\t [\"homeserver\"]: this.state.defaultHomeserver,\n\t\t });\n\t }\n\tlet myHeaders = new Headers();\n\tmyHeaders.append(\"Content-Type\", \"application/json\");\n\n\tlet raw = JSON.stringify({\n\t\t\"username\": this.state.username,\n\t\t\"password\": this.state.password,\n\t});\n\n\tif ( this.state.email !== '' && this.state.email !== ' '){\n\t\traw[\"email\"] = this.state.email\n\t}\n\n\n\tlet requestOptions = {\n\t  method: 'POST',\n\t  headers: myHeaders,\n\t  body: raw,\n\t};\n\n\tfetch(\"http://localhost:7000/index.html\", requestOptions)\n\t  .then(response => response.text())\n\t  .then(result => console.log(result))\n\t  .catch(error => console.log('error', error));\n\tevent.preventDefault();\n  }\n\n\n  render() {\n    return (\n\t\t<div>\n\t\t  <form className=\"formWrap\" onSubmit={this.handleSubmit}>\n\t\t\t<div className=\"formGroup\">\n\t\t\t\t<h1>Sign Up</h1>\n\t\t\t</div>\n\t\t\t<div className=\"formGroup\">\n\t\t\t\t<label className=\"label\">\n\t\t\t\tUsername:\n\t\t\t\t</label>\n\t\t\t\t<input\n\t\t\t\t\tautoFocus={true}\n\t\t\t\t\tautoComplete=\"username\"\n\t\t\t\t\tplaceholder=\"Username\"\n\t\t\t\t\tname=\"username\"            \n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\trequired={true}\n\t\t\t\t\tvalue={this.state.username}\n\t\t\t\t\tonChange={this.handleInputChange} />\n\t\t\t</div>\n\t\t\t<div className=\"formGroup newPassword\">\n\t\t\t\t<label className=\"label\">\n\t\t\t\tPassword:\n\t\t\t\t</label>\n\t\t\t\t<input\n\t\t\t\t\trequired={true}\n\t\t\t\t\tplaceholder=\"Password\"\n\t\t\t\t\tautoComplete=\"new-password\"\n\t\t\t\t\tminLength=\"10\"\n\t\t\t\t\tname=\"password\"            type=\"password\"\n\t\t\t\t\tvalue={this.state.passwordFirst}\n\t\t\t\t\tonChange={this.handleInputChange} />\n\t\t\t</div>\n\t\t\t<div className=\"formGroup newPassword\">\n\t\t\t\t<label className=\"label\">\n\t\t\t\tRetype password\n\t\t\t\t</label>\n\t\t\t\t<input\n\t\t\t\t\trequired={true}\n\t\t\t\t\tautoComplete=\"new-password\"\n\t\t\t\t\tplaceholder=\"Re-enter password\"\t\n\t\t\t\t\tname=\"password\"            type=\"password\"\n\t\t\t\t\tvalue={this.state.passwordSecond}\n\t\t\t\t\tonChange={this.handleInputChange} />\n\t\t\t</div>\n\t\t\t<div className=\"formGroup\">\n\t\t\t\t<label className=\"label\">\n\t\t\t\tE-mail\n\t\t\t\t</label>\n\t\t\t\t<input\n\t\t\t\t\trequired={false}\n\t\t\t\t\tautoComplete=\"email\"\n\t\t\t\t\tname=\"email\"\n\t\t\t\t\tplaceholder=\"Optional\"\n\t\t\t\t\ttype=\"email\"\n\t\t\t\t\tvalue={this.state.email}\n\t\t\t\t\tonChange={this.handleInputChange} />\n\t\t\t</div>\n\t\t\t<div className=\"formGroup\">\n\t\t\t\t<label className=\"label\">\n\t\t\t\tHomeserver URL\n\t\t\t\t</label>\n\t\t\t\t<input\n\t\t\t\t\trequired={false}\n\t\t\t\t\tautoComplete=\"current-password\"\n\t\t\t\t\tname=\"homeserver\"            \n\t\t\t\t\tplaceholder={this.state.defaultHomeserver}\n\t\t\t\t\ttype=\"url\"\n\t\t\t\t\tvalue={this.state.homeserver}\n\t\t\t\t\tonChange={this.handleInputChange} />\n\t\t\t</div>\n\n\n\t\t\t<div className=\"formGroup\">\n\t\t\t\t <input className=\"btn\" type=\"submit\" value=\"Submit\" />\n\t\t\t</div>\n\t\t  </form>\n\t\t</div>\n    );\n  }\n\t}\n\n\nexport default SignUpForm;\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport SignInForm from './SignIn/SignIn';\nimport SignUpForm from './SignUp/SignUp';\n\nclass App extends React.Component {\n constructor(props) {\n    super(props);\n    this.state = {\n\t\tshowSignIn: true,\n\t\tshowSignup: false,\n\t}\n\tthis.toggleForm = this.toggleForm.bind(this);\n    this.handleInputChange = this.handleInputChange.bind(this);\n\tthis.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  toggleForm(event) {\n\t\tthis.setState({\n\t\t\t[\"showSignup\"]:!this.state.showSignup, \n\t\t\t[\"showSignIn\"]: !this.state.showSignIn,\n\t\t});\n\t  event.preventDefault();\n  }\n\n  handleInputChange(event) {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n    this.setState({\n      [name]: value    });\n  }\n\n handleSubmit(event) {\n    alert(\n\t\t'Credentials: '\n\t\t+this.state.username\n\t\t+ this.state.password);\n\t console.log(this.state.username);\n    event.preventDefault();\n  }\n\n  render() {\n\t  if (this.state.showSignIn) {\n\t\treturn(<div className=\"container\">\n\t\t\t\t<SignInForm/>\n\t\t\t\t<p className=\"toggleForm\"> \n\t\t\t\t\tDon't have an account? \n\t\t\t\t\t\t <button className=\"link\" onClick={this.toggleForm}>\n\t\t\t\t\t\t\t&nbsp;Sign Up here!\t\n\t\t\t\t\t\t </button>\n\t\t\t\t</p>\n\t\t\t  </div>\n\t  );\n\t  }\n\t  else{\n\t\treturn(<div className=\"container\">\n\t\t\t\t<SignUpForm/>\n\t\t\t\t<p className=\"toggleForm\"> \n\t\t\t\t\tAlready have an account? \n\t\t\t\t\t\t <button class=\"link\" onClick={this.toggleForm}>\n\t\t\t\t\t\t\t&nbsp;Sign In here!\t\n\t\t\t\t\t\t </button>\n\t\t\t\t</p>\n\t\t\t  </div>\n\t  );\n\n\t  }\n\t}\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport SignInForm from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <SignInForm />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}